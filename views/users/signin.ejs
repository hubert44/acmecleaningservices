<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    <title>Document</title>
</head>
<body>
    <div class="signin-form">
        <h1>Login V2</h1>
        <div class="g-recaptcha" data-sitekey="6LfFk6gpAAAAANuf07d27KLCVx5zmIZdMhu2R2JE"></div>
        <input type="email" name="email" class="border" placeholder="Email" required>
        <input type="password" name="password" class="border" placeholder="Password" required>
        <button type="button" onclick="signup(this); this.disabled=true;">Submit</button>
    </div>
    <div><a href="https://accounts.google.com/o/oauth2/v2/auth?client_id=81231785815-hestalth9eor1s61puln43to06skuadf.apps.googleusercontent.com&redirect_uri=http://localhost:3000/login&response_type=code&scope=profile email">or signup with google</a></div>
</body>
</html>

<script>
    const signup = (btn) => {
    const email =btn.parentNode.parentNode.querySelector('[name=email]').value;
    const password =btn.parentNode.parentNode.querySelector('[name=password]').value;
    const recaptcha =btn.parentNode.parentNode.querySelector('[name=g-recaptcha-response]').value;

    console.log(recaptcha)

    // fetch('http://localhost:8080/auth/register', {
    //     method: "POST",
    //     headers: {
    //         'Content-Type': 'application/json'
    //     },
    //     body: JSON.stringify({email, password, recaptcha})
    // })
    // .then(res => {
    //     return res.json();
    // })
    // .then(resData => {
    //     if(resData.error){
    //         throw resData;
    //     }
    //     console.log(resData);
    //     // window.location.replace('http://localhost:8080/feed/login');
    // })
    // .catch(err => console.log(err));
};

function handleTokenQueryParam() {
    //need login and signup fe urls
    //fe need to handle removal of query parameters
    const queryParams = new URLSearchParams(window.location.search);
    if (queryParams.has('code')) {
        // Get the value of the token query parameter
        const code = queryParams.get('code');
        fetch('http://localhost:8080/auth/google/login', {
            method: "POST",
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({code})
        })
        .then(res => {
            return res.json();
        })
        .then(resData => {
            const newUrl = window.location.origin + window.location.pathname;
            history.replaceState(null, '', newUrl);
            if(resData.error){
                throw resData;
            }
            console.log(resData);
        })
        .catch(err => {
            console.log(err)
        });
    }
}

window.addEventListener('DOMContentLoaded', handleTokenQueryParam);
</script>